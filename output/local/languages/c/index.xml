<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>C on Mudox </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/languages/c/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Wed, 24 Sep 2014 22:18:21 CST</updated>
    
    <item>
      <title>iOS NOTES - COCOA CONCURRENCY</title>
      <link>http://localhost:1313/note/ios_notes_cocoa_concurrency/</link>
      <pubDate>Wed, 24 Sep 2014 22:18:21 CST</pubDate>
      
      <guid>http://localhost:1313/note/ios_notes_cocoa_concurrency/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;Members Of Cocoa Concurrency&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Operation Queue&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;abstract base class &lt;code&gt;NSOperation&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;concrete subclass &lt;code&gt;NSInvocation&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;concrete subclass &lt;code&gt;NSBlockOperation&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dispatch Queue&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dispatch Source&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Operation Queue Features&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;graph-based dependencies&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;completion block&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;execution status monitoring&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;prioritizeing&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;canceling&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>iOS NOTES - COCOA THREADING</title>
      <link>http://localhost:1313/note/ios_notes_cocoa_threading/</link>
      <pubDate>Wed, 24 Sep 2014 21:19:59 CST</pubDate>
      
      <guid>http://localhost:1313/note/ios_notes_cocoa_threading/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;Run Loop&lt;/h1&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;4 roles participate in the run loop game:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Run Loop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;which is represented by &lt;code&gt;NSRun Loop&lt;/code&gt; &amp;amp; &lt;code&gt;CFRunLoop&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Run Loop Mode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;which is represented by &lt;code&gt;CFStringRef&lt;/code&gt; associated to each instance of run
loop object.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Run Loop Source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;which is represented by &lt;code&gt;CFRunloopSource&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Input source&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Port-based source&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perform selctor on other threads&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Custom source&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Timer&lt;/p&gt;

&lt;p&gt;which is represented by &lt;code&gt;CFRunloopTimerRef&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Explictly defined timer&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perform selector on current thread with delay&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perform selector&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Run Loop Observer&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;4 ways to kill a run loop iteration:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;no sources exists&lt;/p&gt;

&lt;p&gt;since some system routines may install certain input sources to the run
 loop implictly, we should not kill a run loop iteration by clearing &amp;lsquo;&lt;em&gt;all&lt;/em&gt;&amp;lsquo;
 sources we known.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;timeout&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sourced handled in one-shot mode&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;explicitly stoped by &lt;code&gt;CRunloopStop&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;3 kinds of perform selector sources.&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;on thread&lt;/th&gt;
&lt;th&gt;invocation&lt;/th&gt;
&lt;th&gt;delay&lt;/th&gt;
&lt;th&gt;blocking call?&lt;/th&gt;
&lt;th&gt;mode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;current thread&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;always non-blocking&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;other thread&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;main thread&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;toc_4&#34;&gt;Alternatives To Threaing&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Operation Objects&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Grand Central Dispatch (GCD)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Idle-time notifications&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Asynchronous functions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Timers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Separate processes&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;toc_5&#34;&gt;Cocoa Support For Threading&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Cocoa threads&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;POSIX threads&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;del&gt;Mutiprocessing Services&lt;/del&gt; (&lt;em&gt;obsolete&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;toc_6&#34;&gt;Inter-Thread Communication&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Direct messageing&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Global variables, shared memory &amp;amp; objects&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Conditions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Run loop sources&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ports &amp;amp; sockets&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;del&gt;Message queues&lt;/del&gt; (&lt;em&gt;obsolete&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cocoa distributed objects&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;toc_7&#34;&gt;Synchronization Tools&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Atomic operation&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;atomic add&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;atomic increment&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;atomic decrement&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;compare-and-swap&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test-and-set&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test-and-clear&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Memory barriers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Volatile variables&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Locks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Mutex&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;POSIX API provides &lt;code&gt;pthread_lock_t&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cocoa provides &lt;code&gt;NSLock&lt;/code&gt; &amp;amp;  &lt;code&gt;@synchronized()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Recursive lock&lt;/p&gt;

&lt;p&gt;which is provided as class &lt;code&gt;NSRecursiveLock&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read-write lock (&lt;em&gt;pthread only&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Distributed lock&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Spin lock (&lt;em&gt;not implemented&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Double-checked lock&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Conditions (aka &lt;em&gt;condition variable&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perform selector routines&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>