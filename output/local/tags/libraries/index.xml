<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Libraries on Mudox </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/tags/libraries/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Fri, 26 Sep 2014 14:52:32 CST</updated>
    
    <item>
      <title>GO&#39;S TEMPLATE LIBRARY</title>
      <link>http://localhost:1313/note/go_stdlib_template/</link>
      <pubDate>Fri, 26 Sep 2014 14:52:32 CST</pubDate>
      
      <guid>http://localhost:1313/note/go_stdlib_template/</guid>
      <description>

&lt;p&gt;I come across this library when I started to use &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;,
which says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is an extremely &lt;strong&gt;lightweight&lt;/strong&gt; engine that provides a very small amount of
logic. In our experience it is &lt;strong&gt;just the right amount of logic&lt;/strong&gt; to be able to
create a good static website.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;3 Steps Using The Template Object&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;New&lt;/code&gt; an template object.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;Parse&lt;/code&gt; template text.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;Execute&lt;/code&gt; (apply) the template to data structure.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;6 Action Families&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;comment&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{/* comment here, line spanning allowed */}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;pipeline&lt;/strong&gt; like variable expansion (substitution)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{pipeline}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;if&lt;/strong&gt; family for branching logic&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{if _pipline_}} T1 {{end}}
{{if _pipline_}} T1 {{else}} T0 {{end}}
{{if _pipline_}} T1 {{else if _pipeline_ }} T0 {{end}}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;range&lt;/strong&gt; family for iteration (loop)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{range pipepine}} T1 {{end}}
{{range pipepine}} T1 {{else}} T0 {{end}}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;with&lt;/strong&gt; family for cursor (dot) moving&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{with pipeline}} T1 {{end}}
{{with pipeline}} T1 {{else}} T0 {{end}}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;template&lt;/strong&gt; family for tempates invocation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// with the dot &#39;.&#39; set to nil.
{{tempalte &amp;quot;name&amp;quot;}}
// with the dot &#39;.&#39; set to value of &#39;pipeline&#39;.
{{tempalte &amp;quot;name&amp;quot; pipeline}}

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;Argument Types&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;untyped &lt;strong&gt;constants&lt;/strong&gt; in go syntax&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;nil&lt;/strong&gt; &amp;ndash; the special constant&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;variable&lt;/strong&gt; name&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$variable_name&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;.&lt;/code&gt; &amp;ndash; the so called &amp;lsquo;context&amp;rsquo; constant&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;dot chain consist of: &lt;strong&gt;field&lt;/strong&gt; name,  &lt;strong&gt;key&lt;/strong&gt; name,  niladic &lt;strong&gt;method&lt;/strong&gt; name&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;(.Field.Key.Method args...).Field.Key ...
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;niladic &lt;strong&gt;function&lt;/strong&gt; name&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;parenthesized &lt;strong&gt;group&lt;/strong&gt; of above&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;print (func arg...) (.method arg...)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>